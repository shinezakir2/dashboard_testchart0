import { Visibility, OrientationType, VerticalAlignmentType, ElbowType, NeighboursSelectionMode, ShapeType, TextOrientationType, HorizontalAlignmentType, PlacementType, NavigationMode, PageFitMode, GroupByType, Enabled, LineType, AdviserPlacementType, SelectionPathMode } from '../enums';
import { Size, Thickness } from '../structs';
export class FamConfig {
    constructor(config = {}) {
        this.navigationMode = NavigationMode.Default;
        this.pageFitMode = PageFitMode.FitToPage;
        this.minimalVisibility = Visibility.Dot;
        this.minimumVisibleLevels = 0;
        this.orientationType = OrientationType.Top;
        this.verticalAlignment = VerticalAlignmentType.Middle;
        this.arrowsDirection = GroupByType.None;
        this.showExtraArrows = true;
        this.extraArrowsMinimumSpace = 30;
        this.groupByType = GroupByType.Children;
        this.alignBylevels = true;
        this.enableMatrixLayout = false;
        this.minimumMatrixSize = 4;
        this.maximumColumnsInMatrix = 6;
        this.hideGrandParentsConnectors = false;
        this.bevelSize = 4;
        this.elbowType = ElbowType.Round;
        this.elbowDotSize = 4;
        this.emptyDiagramMessage = "Diagram is empty.";
        this.items = [];
        this.annotations = [];
        this.cursorItem = null;
        this.highlightItem = null;
        this.highlightGravityRadius = 40;
        this.selectedItems = [];
        this.hasSelectorCheckbox = Enabled.Auto;
        this.selectCheckBoxLabel = "Selected";
        this.selectionPathMode = SelectionPathMode.None;
        this.neighboursSelectionMode = NeighboursSelectionMode.ParentsAndChildren;
        this.templates = [];
        this.defaultTemplateName = null;
        this.defaultLabelAnnotationTemplate = null;
        this.hasButtons = Enabled.Auto;
        this.buttonsTemplate = null;
        this.normalLevelShift = 20;
        this.dotLevelShift = 20;
        this.lineLevelShift = 10;
        this.normalItemsInterval = 10;
        this.dotItemsInterval = 1;
        this.lineItemsInterval = 2;
        this.cousinsIntervalMultiplier = 5;
        this.itemTitleFirstFontColor = "#ffffff";
        this.itemTitleSecondFontColor = "#000080";
        this.minimizedItemShapeType = ShapeType.None;
        this.linesColor = "#c0c0c0";
        this.linesWidth = 1;
        this.linesType = LineType.Solid;
        this.showNeigboursConnectorsHighlighted = false;
        this.highlightLinesColor = "#ff0000";
        this.highlightLinesWidth = 1;
        this.highlightLinesType = LineType.Solid;
        this.linesPalette = [];
        this.calloutMaximumVisibility = Visibility.Dot;
        this.showCallout = true;
        this.calloutPlacementOffset = 100;
        this.defaultCalloutTemplateName = null;
        this.calloutfillColor = "#000000";
        this.calloutBorderColor = null;
        this.calloutOffset = 4;
        this.calloutCornerRadius = 4;
        this.calloutPointerWidth = "10%";
        this.calloutLineWidth = 1;
        this.calloutOpacity = 0.2;
        this.buttonsPanelSize = 28;
        this.groupTitlePanelSize = 24;
        this.checkBoxPanelSize = 24;
        this.groupTitlePlacementType = AdviserPlacementType.Left;
        this.groupTitleOrientation = TextOrientationType.RotateRight;
        this.groupTitleVerticalAlignment = VerticalAlignmentType.Middle;
        this.groupTitleHorizontalAlignment = HorizontalAlignmentType.Center;
        this.groupTitleFontSize = "12px";
        this.groupTitleFontFamily = "Arial";
        this.groupTitleColor = "#4169e1";
        this.groupTitleFontWeight = "normal";
        this.groupTitleFontStyle = "normal";
        this.groupTitleTemplate = null;
        this.levelTitlePanelSize = 24;
        this.levelTitlePlacementType = AdviserPlacementType.Left;
        this.levelTitlePlaceInside = false;
        this.levelTitleOrientation = TextOrientationType.Auto;
        this.levelTitleVerticalAlignment = VerticalAlignmentType.Middle;
        this.levelTitleHorizontalAlignment = HorizontalAlignmentType.Center;
        this.levelTitleFontSize = "12px";
        this.levelTitleFontFamily = "Arial";
        this.levelTitleFontColor = "#ffffff";
        this.levelTitleColor = "#4169e1";
        this.levelTitleFontWeight = "normal";
        this.levelTitleFontStyle = "normal";
        this.levelTitleTemplate = null;
        this.levelBackgroundTemplate = null;
        this.distance = 3;
        this.scale = 1;
        this.minimumScale = 0.5;
        this.maximumScale = 1;
        this.showLabels = Enabled.Auto;
        this.labelSize = new Size(80, 24);
        this.labelOffset = 1;
        this.labelOrientation = TextOrientationType.Horizontal;
        this.labelPlacement = PlacementType.Top;
        this.labelFontSize = "10px";
        this.labelFontFamily = "Arial";
        this.labelColor = "#000000";
        this.labelFontWeight = "normal";
        this.labelFontStyle = "normal";
        this.enablePanning = true;
        this.autoSizeMinimum = new Size(800, 600);
        this.autoSizeMaximum = new Size(1024, 768);
        this.showFrame = false;
        this.frameInnerPadding = new Thickness(2, 2, 2, 2);
        this.frameOuterPadding = new Thickness(2, 2, 2, 2);
        this.padding = new Thickness(10, 10, 10, 10);
        Object.assign(this, config);
    }
}
;
//# sourceMappingURL=data:application/json;base64,