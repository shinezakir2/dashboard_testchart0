import { Component, EventEmitter, Input, Output } from '@angular/core';
import { ConnectorType, NavigationMode, PageFitMode, Visibility, OrientationType, HorizontalAlignmentType, VerticalAlignmentType, GroupByType, ElbowType, Enabled, SelectionPathMode, ShapeType, LineType, ChildrenPlacementType, AdviserPlacementType, TextOrientationType, PlacementType } from '../enums';
import { Size, Thickness } from '../structs';
import { BaseDiagramComponent } from './base-diagram.component';
import { TaskManagerFactory } from './task-manager-factory';
import { OrgEventArgs, SelectionEventArgs } from '../events/';
// @ts-ignore
import { OrgTaskManagerFactory } from 'basicprimitives';
import { OrgConfig } from '../configs/org-config';
import * as i0 from "@angular/core";
import * as i1 from "./rotated-text.component";
import * as i2 from "./components/item.component";
import * as i3 from "./components/checkbox.component";
import * as i4 from "./components/group-title.component";
import * as i5 from "./components/cursor.component";
import * as i6 from "./components/highlight.component";
import * as i7 from "./components/dot-highlight.component";
import * as i8 from "./components/level-title.component";
import * as i9 from "./components/level-background.component";
import * as i10 from "@angular/common";
export class OrgDiagramComponent extends BaseDiagramComponent {
    constructor(host, zone) {
        super(host, zone, new TaskManagerFactory(OrgTaskManagerFactory));
        this.navigationMode = NavigationMode.Default;
        this.pageFitMode = PageFitMode.FitToPage;
        this.alignBranches = false;
        this.minimalVisibility = Visibility.Dot;
        this.minimumVisibleLevels = 1;
        this.orientationType = OrientationType.Top;
        this.horizontalAlignment = HorizontalAlignmentType.Center;
        this.verticalAlignment = VerticalAlignmentType.Middle;
        this.arrowsDirection = GroupByType.None;
        this.showExtraArrows = false;
        this.extraArrowsMinimumSpace = 30;
        this.connectorType = ConnectorType.Squared;
        this.bevelSize = 4;
        this.elbowType = ElbowType.None;
        this.elbowDotSize = 4;
        this.emptyDiagramMessage = "Diagram is empty.";
        this.items = [];
        this.annotations = [];
        this.cursorItem = null;
        this.highlightItem = null;
        this.highlightGravityRadius = 40;
        this.selectedItems = [];
        this.hasSelectorCheckbox = Enabled.Auto;
        this.selectCheckBoxLabel = "Selected";
        this.selectionPathMode = SelectionPathMode.FullStack;
        this.templates = [];
        this.defaultTemplateName = null;
        this.hasButtons = Enabled.Auto;
        this.buttonsTemplate = null;
        this.normalLevelShift = 20;
        this.dotLevelShift = 20;
        this.lineLevelShift = 10;
        this.normalItemsInterval = 10;
        this.dotItemsInterval = 1;
        this.lineItemsInterval = 2;
        this.cousinsIntervalMultiplier = 5;
        this.itemTitleFirstFontColor = "#ffffff";
        this.itemTitleSecondFontColor = "#000080";
        this.minimizedItemShapeType = ShapeType.None;
        this.linesColor = "#c0c0c0";
        this.linesWidth = 1;
        this.linesType = LineType.Solid;
        this.highlightLinesColor = "#ff0000";
        this.highlightLinesWidth = 1;
        this.highlightLinesType = LineType.Solid;
        this.calloutMaximumVisibility = Visibility.Dot;
        this.showCallout = true;
        this.calloutPlacementOffset = 100;
        this.defaultCalloutTemplateName = null;
        this.calloutfillColor = "#000000";
        this.calloutBorderColor = null;
        this.calloutOffset = 4;
        this.calloutCornerRadius = 4;
        this.calloutPointerWidth = "10%";
        this.calloutLineWidth = 1;
        this.calloutOpacity = 0.2;
        this.childrenPlacementType = ChildrenPlacementType.Horizontal;
        this.leavesPlacementType = ChildrenPlacementType.Horizontal;
        this.placeAssistantsAboveChildren = true;
        this.placeAdvisersAboveChildren = true;
        this.maximumColumnsInMatrix = 6;
        this.buttonsPanelSize = 28;
        this.groupTitlePanelSize = 24;
        this.checkBoxPanelSize = 24;
        this.groupTitlePlacementType = AdviserPlacementType.Left;
        this.groupTitleOrientation = TextOrientationType.RotateRight;
        this.groupTitleVerticalAlignment = VerticalAlignmentType.Middle;
        this.groupTitleHorizontalAlignment = HorizontalAlignmentType.Center;
        this.groupTitleFontSize = "12px";
        this.groupTitleFontFamily = "Arial";
        this.groupTitleColor = "#4169e1";
        this.groupTitleFontWeight = "normal";
        this.groupTitleFontStyle = "normal";
        this.groupTitleTemplate = null;
        this.levelTitlePanelSize = 24;
        this.levelTitlePlacementType = AdviserPlacementType.Left;
        this.levelTitlePlaceInside = false;
        this.levelTitleOrientation = TextOrientationType.Auto;
        this.levelTitleVerticalAlignment = VerticalAlignmentType.Middle;
        this.levelTitleHorizontalAlignment = HorizontalAlignmentType.Center;
        this.levelTitleFontSize = "12px";
        this.levelTitleFontFamily = "Arial";
        this.levelTitleFontColor = "#ffffff";
        this.levelTitleColor = "#4169e1";
        this.levelTitleFontWeight = "normal";
        this.levelTitleFontStyle = "normal";
        this.levelTitleTemplate = null;
        this.levelBackgroundTemplate = null;
        this.distance = 3;
        this.scale = 1;
        this.minimumScale = 0.5;
        this.maximumScale = 2;
        this.showLabels = Enabled.Auto;
        this.labelSize = new Size(80, 24);
        this.labelOffset = 1;
        this.labelOrientation = TextOrientationType.Horizontal;
        this.labelPlacement = PlacementType.Top;
        this.labelFontSize = "10px";
        this.labelFontFamily = "Arial";
        this.labelColor = "#000000";
        this.labelFontWeight = "normal";
        this.labelFontStyle = "normal";
        this.enablePanning = true;
        this.autoSizeMinimum = new Size(800, 600);
        this.autoSizeMaximum = new Size(1024, 768);
        this.showFrame = false;
        this.frameInnerPadding = new Thickness(2, 2, 2, 2);
        this.frameOuterPadding = new Thickness(2, 2, 2, 2);
        this.padding = new Thickness(10, 10, 10, 10);
        this.onHighlightChanging = new EventEmitter(false);
        this.onHighlightChanged = new EventEmitter();
        this.onCursorChanging = new EventEmitter(false);
        this.onCursorChanged = new EventEmitter();
        this.onSelectionChanging = new EventEmitter(false);
        this.onSelectionChanged = new EventEmitter();
    }
    ngOnChanges(changes) {
        var config = new OrgConfig(this);
        const { highlightItem, cursorItem, selectedItems } = config;
        this.state = {
            ...this.state,
            config,
            highlightItem,
            cursorItem,
            selectedItems,
            centerOnCursor: this.centerOnCursor
        };
        this.render();
    }
    _onHighlightChanging(event, itemId, newItemId) {
        var newEvent = new OrgEventArgs({
            ...(this.getEventArgs(itemId, newItemId)),
            event
        });
        this.onHighlightChanging.emit(newEvent);
        return newEvent;
    }
    ;
    _onHighlightChanged(eventArgs) {
        this.onHighlightChanged.emit(eventArgs);
    }
    ;
    _onCursorChanging(event, itemId, newItemId) {
        var newEvent = new OrgEventArgs({
            ...(this.getEventArgs(itemId, newItemId)),
            event
        });
        this.onCursorChanging.emit(newEvent);
        return newEvent;
    }
    ;
    _onCursorChanged(eventArgs) {
        this.onCursorChanged.emit(eventArgs);
    }
    ;
    _onSelectionChanging(event, selectedItems, newSelectedItems) {
        var newEvent = new SelectionEventArgs({
            selectedItems,
            newSelectedItems,
            event
        });
        this.onSelectionChanging.emit(newEvent);
        return newEvent;
    }
    ;
    _onSelectionChanged(eventArgs) {
        this.onSelectionChanged.emit(eventArgs);
    }
    ;
}
OrgDiagramComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.2", ngImport: i0, type: OrgDiagramComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
OrgDiagramComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.2", type: OrgDiagramComponent, selector: "org-diagram", inputs: { navigationMode: "navigationMode", pageFitMode: "pageFitMode", alignBranches: "alignBranches", minimalVisibility: "minimalVisibility", minimumVisibleLevels: "minimumVisibleLevels", orientationType: "orientationType", horizontalAlignment: "horizontalAlignment", verticalAlignment: "verticalAlignment", arrowsDirection: "arrowsDirection", showExtraArrows: "showExtraArrows", extraArrowsMinimumSpace: "extraArrowsMinimumSpace", connectorType: "connectorType", bevelSize: "bevelSize", elbowType: "elbowType", elbowDotSize: "elbowDotSize", emptyDiagramMessage: "emptyDiagramMessage", items: "items", annotations: "annotations", cursorItem: "cursorItem", highlightItem: "highlightItem", highlightGravityRadius: "highlightGravityRadius", selectedItems: "selectedItems", hasSelectorCheckbox: "hasSelectorCheckbox", selectCheckBoxLabel: "selectCheckBoxLabel", selectionPathMode: "selectionPathMode", templates: "templates", defaultTemplateName: "defaultTemplateName", hasButtons: "hasButtons", buttonsTemplate: "buttonsTemplate", normalLevelShift: "normalLevelShift", dotLevelShift: "dotLevelShift", lineLevelShift: "lineLevelShift", normalItemsInterval: "normalItemsInterval", dotItemsInterval: "dotItemsInterval", lineItemsInterval: "lineItemsInterval", cousinsIntervalMultiplier: "cousinsIntervalMultiplier", itemTitleFirstFontColor: "itemTitleFirstFontColor", itemTitleSecondFontColor: "itemTitleSecondFontColor", minimizedItemShapeType: "minimizedItemShapeType", linesColor: "linesColor", linesWidth: "linesWidth", linesType: "linesType", highlightLinesColor: "highlightLinesColor", highlightLinesWidth: "highlightLinesWidth", highlightLinesType: "highlightLinesType", calloutMaximumVisibility: "calloutMaximumVisibility", showCallout: "showCallout", calloutPlacementOffset: "calloutPlacementOffset", defaultCalloutTemplateName: "defaultCalloutTemplateName", calloutfillColor: "calloutfillColor", calloutBorderColor: "calloutBorderColor", calloutOffset: "calloutOffset", calloutCornerRadius: "calloutCornerRadius", calloutPointerWidth: "calloutPointerWidth", calloutLineWidth: "calloutLineWidth", calloutOpacity: "calloutOpacity", childrenPlacementType: "childrenPlacementType", leavesPlacementType: "leavesPlacementType", placeAssistantsAboveChildren: "placeAssistantsAboveChildren", placeAdvisersAboveChildren: "placeAdvisersAboveChildren", maximumColumnsInMatrix: "maximumColumnsInMatrix", buttonsPanelSize: "buttonsPanelSize", groupTitlePanelSize: "groupTitlePanelSize", checkBoxPanelSize: "checkBoxPanelSize", groupTitlePlacementType: "groupTitlePlacementType", groupTitleOrientation: "groupTitleOrientation", groupTitleVerticalAlignment: "groupTitleVerticalAlignment", groupTitleHorizontalAlignment: "groupTitleHorizontalAlignment", groupTitleFontSize: "groupTitleFontSize", groupTitleFontFamily: "groupTitleFontFamily", groupTitleColor: "groupTitleColor", groupTitleFontWeight: "groupTitleFontWeight", groupTitleFontStyle: "groupTitleFontStyle", groupTitleTemplate: "groupTitleTemplate", levelTitlePanelSize: "levelTitlePanelSize", levelTitlePlacementType: "levelTitlePlacementType", levelTitlePlaceInside: "levelTitlePlaceInside", levelTitleOrientation: "levelTitleOrientation", levelTitleVerticalAlignment: "levelTitleVerticalAlignment", levelTitleHorizontalAlignment: "levelTitleHorizontalAlignment", levelTitleFontSize: "levelTitleFontSize", levelTitleFontFamily: "levelTitleFontFamily", levelTitleFontColor: "levelTitleFontColor", levelTitleColor: "levelTitleColor", levelTitleFontWeight: "levelTitleFontWeight", levelTitleFontStyle: "levelTitleFontStyle", levelTitleTemplate: "levelTitleTemplate", levelBackgroundTemplate: "levelBackgroundTemplate", distance: "distance", scale: "scale", minimumScale: "minimumScale", maximumScale: "maximumScale", showLabels: "showLabels", labelSize: "labelSize", labelOffset: "labelOffset", labelOrientation: "labelOrientation", labelPlacement: "labelPlacement", labelFontSize: "labelFontSize", labelFontFamily: "labelFontFamily", labelColor: "labelColor", labelFontWeight: "labelFontWeight", labelFontStyle: "labelFontStyle", enablePanning: "enablePanning", autoSizeMinimum: "autoSizeMinimum", autoSizeMaximum: "autoSizeMaximum", showFrame: "showFrame", frameInnerPadding: "frameInnerPadding", frameOuterPadding: "frameOuterPadding", padding: "padding" }, outputs: { onHighlightChanging: "onHighlightChanging", onHighlightChanged: "onHighlightChanged", onCursorChanging: "onCursorChanging", onCursorChanged: "onCursorChanged", onSelectionChanging: "onSelectionChanging", onSelectionChanged: "onSelectionChanged" }, usesInheritance: true, usesOnChanges: true, ngImport: i0, template: "<!-- root control panel -->\n<div #controlPanelRef\n  class=\"control-panel\"\n  [ngStyle]=\"controlPanelStyle\"\n  (keydown)=\"onKeyDown($event)\"\n  tabIndex=\"0\"\n>\n  <div *ngIf=\"framePlaceholder\"\n    #frameMousePanelRef\n    class=\"frame-mouse-panel\"\n    [ngStyle]=\"frameMousePanelStyle\"\n    (click)=\"onFrameClick($event)\"\n    (mousemove)=\"onFrameMouseMove($event)\"\n  >\n    <div #framePlaceholderRef\n      class=\"frame-placeholder\" \n      [ngStyle]=\"framePlaceholderStyle\"\n    >\n      <ng-container *ngTemplateOutlet=\"layerTemplate; context: {$implicit: framePlaceholder}\"></ng-container>\n    </div>\n  </div>\n  <div *ngIf=\"titlesPlaceholder\"\n    #titlesMousePanelRef\n    class=\"titles-mouse-panel\"\n    [ngStyle]=\"titlesMousePanelStyle\"\n    (mousemove)=\"onFrameMouseMove($event)\"\n    (click)=\"onFrameClick($event)\"\n  >\n    <div #titlesPlaceholderRef\n      [ngStyle]=\"titlesPlaceholderStyle\"\n      class=\"titles-placeholder\"\n     >\n      <ng-container *ngTemplateOutlet=\"layerTemplate; context: {$implicit: titlesPlaceholder}\"></ng-container>\n    </div>\n  </div>\n  <div\n    #scrollPanelRef\n    class=\"scroll-panel\"\n    [ngStyle]=\"scrollPanelStyle\"\n    (scroll)=\"onScroll($event)\"\n    [scrollLeft]=\"placeholderOffset ? placeholderOffset.x : undefined\"\n    [scrollTop]=\"placeholderOffset ? placeholderOffset.y : undefined\"\n  >\n    <div #mousePanelRef\n      class=\"mouse-panel\"\n      [ngStyle]=\"mousePanelStyle\"\n      (mousemove)=\"onMouseMove($event)\"\n      (click)=\"onClick($event)\"\n      (change)=\"onCheckboxChange($event)\"\n    >\n      <div #placeholderRef\n        class=\"placeholder\"\n        [ngStyle]=\"placeholderStyle\"\n      >\n        <ng-container *ngTemplateOutlet=\"layerTemplate; context: {$implicit: placeholder}\"></ng-container>\n        <div *ngIf=\"calloutPlaceholder\"\n          #calloutPlaceholderRef\n          class=\"callout-placeholder\"\n          [ngStyle]=\"calloutPlaceholderStyle\"\n        >\n          <ng-container *ngTemplateOutlet=\"layerTemplate; context: {$implicit: calloutPlaceholder}\"></ng-container>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!--Templates: -->\n<ng-template #layerTemplate let-placeholder>\n  <div *ngFor=\"let layer of placeholder.layers\" class=\"layer\">\n    <ng-container *ngIf=\"layer\">\n      <div *ngFor=\"let label of layer.labels\" class=\"label\" [ngStyle]= \"label.style\">\n        <rotated-text\n          [width]=\"label.width\"\n          [height]=\"label.height\"\n          [orientation]=\"label.orientation\"\n          [horizontalAlignment]=\"label.horizontalAlignment\"\n          [verticalAlignment]=\"label.verticalAlignment\"\n        >{{label.label}}</rotated-text>\n      </div>\n      <svg \n        *ngIf=\"layer.polylines.length > 0\"\n        attr.height.px=\"{{placeholder.size.height}}\"\n        attr.width.px=\"{{placeholder.size.width}}\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        [ngStyle]=\"{width: placeholder.size.width + 'px', height: placeholder.size.height + 'px'}\"\n      >\n        <path *ngFor=\"let path of layer.polylines\" [attr.d]=\"path.data\" [ngStyle]=\"path.style\"></path>\n      </svg>\n      <div *ngFor=\"let item of layer.items;\" class=\"template\" [ngStyle]=\"item.style\">\n        <ng-container [ngSwitch]=\"item.templateType\">\n          <ng-container *ngSwitchCase=\"'itemTemplate'\">\n            <bp-item [itemConfig]=\"item.context.context\" [itemTitleFirstFontColor]=\"item.context.itemTitleFirstFontColor\" [itemTitleSecondFontColor]=\"item.context.itemTitleSecondFontColor\"></bp-item>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"'checkboxTemplate'\">\n            <bp-checkbox [id]=\"item.context.id\" [isSelected]=\"item.context.isSelected\" [label]=\"item.context.selectCheckBoxLabel\"></bp-checkbox>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"'groupTitleTemplate'\">\n            <bp-group-title [options]=\"item.context\" [itemConfig]=\"item.context.context\" [width]=\"item.context.width\" [height]=\"item.context.height\"></bp-group-title>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"'cursorTemplate'\">\n            <bp-cursor [templateConfig]=\"item.context.templateConfig\"></bp-cursor>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"'highlightTemplate'\">\n            <bp-highlight [templateConfig]=\"item.context.templateConfig\"></bp-highlight>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"'dotHighlightTemplate'\">\n            <bp-dot-highlight [templateConfig]=\"item.context.templateConfig\"></bp-dot-highlight>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"'levelTitleTemplate'\">\n            <bp-level-title [options]=\"item.context\" [annotationConfig]=\"item.context.context\" [width]=\"item.context.width\" [height]=\"item.context.height\"></bp-level-title>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"'levelBackgroundTemplate'\">\n            <bp-level-background [annotationConfig]=\"item.context.context\"></bp-level-background>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"'labelAnnotationTemplate'\">\n            <div class=\"label-annotation\">{{item.context.context.title}}</div>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"'annotationLabelTemplate'\">\n            <div class=\"label-annotation\">{{item.context.context.label}}</div>\n          </ng-container>\n          <ng-container *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"item.templateRef; context: item.context\"></ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n    </ng-container>\n  </div>\n</ng-template>\n", styles: [".control-panel{position:relative;overflow:hidden;top:0px;left:0px;width:100%;height:100%;padding:0;margin-bottom:0;margin-right:0}.frame-mouse-panel{position:absolute;overflow:hidden}.frame-placeholder{position:absolute;overflow:hidden;transform-origin:0 0}.titles-mouse-panel,.titles-placeholder{position:absolute;overflow:hidden}.scroll-panel{position:absolute;overflow:auto;-webkit-overflow-scrolling:touch}.mouse-panel{position:absolute;overflow:hidden}.placeholder{position:absolute;overflow:hidden;transform-origin:0 0}.callout-placeholder{position:absolute;overflow:visible}.layer{position:absolute;overflow:visible;left:0px;top:0px}.label{position:absolute;overflow:visible;font-family:Trebuchet MS,Tahoma,Verdana,Arial,sans-serif;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-touch-callout:none;user-select:none;box-sizing:content-box}.template{position:absolute;overflow:visible;font-family:Trebuchet MS,Tahoma,Verdana,Arial,sans-serif;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-touch-callout:none;user-select:none;box-sizing:content-box;padding:0;margin:0}.label-annotation{position:absolute;overflow:visible;font-family:Trebuchet MS,Tahoma,Verdana,Arial,sans-serif;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-touch-callout:none;user-select:none;box-sizing:content-box;width:100%;text-align:center}\n"], components: [{ type: i1.RotatedText, selector: "rotated-text", inputs: ["width", "height", "orientation", "horizontalAlignment", "verticalAlignment"] }, { type: i2.ItemComponent, selector: "bp-item", inputs: ["itemTitleFirstFontColor", "itemTitleSecondFontColor", "itemConfig"] }, { type: i3.CheckboxComponent, selector: "bp-checkbox", inputs: ["id", "label", "isSelected"] }, { type: i4.GroupTitleComponent, selector: "bp-group-title", inputs: ["options", "itemConfig", "width", "height"] }, { type: i5.CursorComponent, selector: "bp-cursor", inputs: ["templateConfig"] }, { type: i6.HighlightComponent, selector: "bp-highlight", inputs: ["templateConfig"] }, { type: i7.DotHighlightComponent, selector: "bp-dot-highlight", inputs: ["templateConfig"] }, { type: i8.LevelTitleComponent, selector: "bp-level-title", inputs: ["options", "annotationConfig", "width", "height"] }, { type: i9.LevelBackgroundComponent, selector: "bp-level-background", inputs: ["annotationConfig"] }], directives: [{ type: i10.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { type: i10.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i10.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i10.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i10.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i10.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i10.NgSwitchDefault, selector: "[ngSwitchDefault]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.2", ngImport: i0, type: OrgDiagramComponent, decorators: [{
            type: Component,
            args: [{ selector: 'org-diagram', template: "<!-- root control panel -->\n<div #controlPanelRef\n  class=\"control-panel\"\n  [ngStyle]=\"controlPanelStyle\"\n  (keydown)=\"onKeyDown($event)\"\n  tabIndex=\"0\"\n>\n  <div *ngIf=\"framePlaceholder\"\n    #frameMousePanelRef\n    class=\"frame-mouse-panel\"\n    [ngStyle]=\"frameMousePanelStyle\"\n    (click)=\"onFrameClick($event)\"\n    (mousemove)=\"onFrameMouseMove($event)\"\n  >\n    <div #framePlaceholderRef\n      class=\"frame-placeholder\" \n      [ngStyle]=\"framePlaceholderStyle\"\n    >\n      <ng-container *ngTemplateOutlet=\"layerTemplate; context: {$implicit: framePlaceholder}\"></ng-container>\n    </div>\n  </div>\n  <div *ngIf=\"titlesPlaceholder\"\n    #titlesMousePanelRef\n    class=\"titles-mouse-panel\"\n    [ngStyle]=\"titlesMousePanelStyle\"\n    (mousemove)=\"onFrameMouseMove($event)\"\n    (click)=\"onFrameClick($event)\"\n  >\n    <div #titlesPlaceholderRef\n      [ngStyle]=\"titlesPlaceholderStyle\"\n      class=\"titles-placeholder\"\n     >\n      <ng-container *ngTemplateOutlet=\"layerTemplate; context: {$implicit: titlesPlaceholder}\"></ng-container>\n    </div>\n  </div>\n  <div\n    #scrollPanelRef\n    class=\"scroll-panel\"\n    [ngStyle]=\"scrollPanelStyle\"\n    (scroll)=\"onScroll($event)\"\n    [scrollLeft]=\"placeholderOffset ? placeholderOffset.x : undefined\"\n    [scrollTop]=\"placeholderOffset ? placeholderOffset.y : undefined\"\n  >\n    <div #mousePanelRef\n      class=\"mouse-panel\"\n      [ngStyle]=\"mousePanelStyle\"\n      (mousemove)=\"onMouseMove($event)\"\n      (click)=\"onClick($event)\"\n      (change)=\"onCheckboxChange($event)\"\n    >\n      <div #placeholderRef\n        class=\"placeholder\"\n        [ngStyle]=\"placeholderStyle\"\n      >\n        <ng-container *ngTemplateOutlet=\"layerTemplate; context: {$implicit: placeholder}\"></ng-container>\n        <div *ngIf=\"calloutPlaceholder\"\n          #calloutPlaceholderRef\n          class=\"callout-placeholder\"\n          [ngStyle]=\"calloutPlaceholderStyle\"\n        >\n          <ng-container *ngTemplateOutlet=\"layerTemplate; context: {$implicit: calloutPlaceholder}\"></ng-container>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!--Templates: -->\n<ng-template #layerTemplate let-placeholder>\n  <div *ngFor=\"let layer of placeholder.layers\" class=\"layer\">\n    <ng-container *ngIf=\"layer\">\n      <div *ngFor=\"let label of layer.labels\" class=\"label\" [ngStyle]= \"label.style\">\n        <rotated-text\n          [width]=\"label.width\"\n          [height]=\"label.height\"\n          [orientation]=\"label.orientation\"\n          [horizontalAlignment]=\"label.horizontalAlignment\"\n          [verticalAlignment]=\"label.verticalAlignment\"\n        >{{label.label}}</rotated-text>\n      </div>\n      <svg \n        *ngIf=\"layer.polylines.length > 0\"\n        attr.height.px=\"{{placeholder.size.height}}\"\n        attr.width.px=\"{{placeholder.size.width}}\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        [ngStyle]=\"{width: placeholder.size.width + 'px', height: placeholder.size.height + 'px'}\"\n      >\n        <path *ngFor=\"let path of layer.polylines\" [attr.d]=\"path.data\" [ngStyle]=\"path.style\"></path>\n      </svg>\n      <div *ngFor=\"let item of layer.items;\" class=\"template\" [ngStyle]=\"item.style\">\n        <ng-container [ngSwitch]=\"item.templateType\">\n          <ng-container *ngSwitchCase=\"'itemTemplate'\">\n            <bp-item [itemConfig]=\"item.context.context\" [itemTitleFirstFontColor]=\"item.context.itemTitleFirstFontColor\" [itemTitleSecondFontColor]=\"item.context.itemTitleSecondFontColor\"></bp-item>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"'checkboxTemplate'\">\n            <bp-checkbox [id]=\"item.context.id\" [isSelected]=\"item.context.isSelected\" [label]=\"item.context.selectCheckBoxLabel\"></bp-checkbox>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"'groupTitleTemplate'\">\n            <bp-group-title [options]=\"item.context\" [itemConfig]=\"item.context.context\" [width]=\"item.context.width\" [height]=\"item.context.height\"></bp-group-title>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"'cursorTemplate'\">\n            <bp-cursor [templateConfig]=\"item.context.templateConfig\"></bp-cursor>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"'highlightTemplate'\">\n            <bp-highlight [templateConfig]=\"item.context.templateConfig\"></bp-highlight>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"'dotHighlightTemplate'\">\n            <bp-dot-highlight [templateConfig]=\"item.context.templateConfig\"></bp-dot-highlight>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"'levelTitleTemplate'\">\n            <bp-level-title [options]=\"item.context\" [annotationConfig]=\"item.context.context\" [width]=\"item.context.width\" [height]=\"item.context.height\"></bp-level-title>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"'levelBackgroundTemplate'\">\n            <bp-level-background [annotationConfig]=\"item.context.context\"></bp-level-background>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"'labelAnnotationTemplate'\">\n            <div class=\"label-annotation\">{{item.context.context.title}}</div>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"'annotationLabelTemplate'\">\n            <div class=\"label-annotation\">{{item.context.context.label}}</div>\n          </ng-container>\n          <ng-container *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"item.templateRef; context: item.context\"></ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n    </ng-container>\n  </div>\n</ng-template>\n", styles: [".control-panel{position:relative;overflow:hidden;top:0px;left:0px;width:100%;height:100%;padding:0;margin-bottom:0;margin-right:0}.frame-mouse-panel{position:absolute;overflow:hidden}.frame-placeholder{position:absolute;overflow:hidden;transform-origin:0 0}.titles-mouse-panel,.titles-placeholder{position:absolute;overflow:hidden}.scroll-panel{position:absolute;overflow:auto;-webkit-overflow-scrolling:touch}.mouse-panel{position:absolute;overflow:hidden}.placeholder{position:absolute;overflow:hidden;transform-origin:0 0}.callout-placeholder{position:absolute;overflow:visible}.layer{position:absolute;overflow:visible;left:0px;top:0px}.label{position:absolute;overflow:visible;font-family:Trebuchet MS,Tahoma,Verdana,Arial,sans-serif;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-touch-callout:none;user-select:none;box-sizing:content-box}.template{position:absolute;overflow:visible;font-family:Trebuchet MS,Tahoma,Verdana,Arial,sans-serif;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-touch-callout:none;user-select:none;box-sizing:content-box;padding:0;margin:0}.label-annotation{position:absolute;overflow:visible;font-family:Trebuchet MS,Tahoma,Verdana,Arial,sans-serif;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-touch-callout:none;user-select:none;box-sizing:content-box;width:100%;text-align:center}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { navigationMode: [{
                type: Input
            }], pageFitMode: [{
                type: Input
            }], alignBranches: [{
                type: Input
            }], minimalVisibility: [{
                type: Input
            }], minimumVisibleLevels: [{
                type: Input
            }], orientationType: [{
                type: Input
            }], horizontalAlignment: [{
                type: Input
            }], verticalAlignment: [{
                type: Input
            }], arrowsDirection: [{
                type: Input
            }], showExtraArrows: [{
                type: Input
            }], extraArrowsMinimumSpace: [{
                type: Input
            }], connectorType: [{
                type: Input
            }], bevelSize: [{
                type: Input
            }], elbowType: [{
                type: Input
            }], elbowDotSize: [{
                type: Input
            }], emptyDiagramMessage: [{
                type: Input
            }], items: [{
                type: Input
            }], annotations: [{
                type: Input
            }], cursorItem: [{
                type: Input
            }], highlightItem: [{
                type: Input
            }], highlightGravityRadius: [{
                type: Input
            }], selectedItems: [{
                type: Input
            }], hasSelectorCheckbox: [{
                type: Input
            }], selectCheckBoxLabel: [{
                type: Input
            }], selectionPathMode: [{
                type: Input
            }], templates: [{
                type: Input
            }], defaultTemplateName: [{
                type: Input
            }], hasButtons: [{
                type: Input
            }], buttonsTemplate: [{
                type: Input
            }], normalLevelShift: [{
                type: Input
            }], dotLevelShift: [{
                type: Input
            }], lineLevelShift: [{
                type: Input
            }], normalItemsInterval: [{
                type: Input
            }], dotItemsInterval: [{
                type: Input
            }], lineItemsInterval: [{
                type: Input
            }], cousinsIntervalMultiplier: [{
                type: Input
            }], itemTitleFirstFontColor: [{
                type: Input
            }], itemTitleSecondFontColor: [{
                type: Input
            }], minimizedItemShapeType: [{
                type: Input
            }], linesColor: [{
                type: Input
            }], linesWidth: [{
                type: Input
            }], linesType: [{
                type: Input
            }], highlightLinesColor: [{
                type: Input
            }], highlightLinesWidth: [{
                type: Input
            }], highlightLinesType: [{
                type: Input
            }], calloutMaximumVisibility: [{
                type: Input
            }], showCallout: [{
                type: Input
            }], calloutPlacementOffset: [{
                type: Input
            }], defaultCalloutTemplateName: [{
                type: Input
            }], calloutfillColor: [{
                type: Input
            }], calloutBorderColor: [{
                type: Input
            }], calloutOffset: [{
                type: Input
            }], calloutCornerRadius: [{
                type: Input
            }], calloutPointerWidth: [{
                type: Input
            }], calloutLineWidth: [{
                type: Input
            }], calloutOpacity: [{
                type: Input
            }], childrenPlacementType: [{
                type: Input
            }], leavesPlacementType: [{
                type: Input
            }], placeAssistantsAboveChildren: [{
                type: Input
            }], placeAdvisersAboveChildren: [{
                type: Input
            }], maximumColumnsInMatrix: [{
                type: Input
            }], buttonsPanelSize: [{
                type: Input
            }], groupTitlePanelSize: [{
                type: Input
            }], checkBoxPanelSize: [{
                type: Input
            }], groupTitlePlacementType: [{
                type: Input
            }], groupTitleOrientation: [{
                type: Input
            }], groupTitleVerticalAlignment: [{
                type: Input
            }], groupTitleHorizontalAlignment: [{
                type: Input
            }], groupTitleFontSize: [{
                type: Input
            }], groupTitleFontFamily: [{
                type: Input
            }], groupTitleColor: [{
                type: Input
            }], groupTitleFontWeight: [{
                type: Input
            }], groupTitleFontStyle: [{
                type: Input
            }], groupTitleTemplate: [{
                type: Input
            }], levelTitlePanelSize: [{
                type: Input
            }], levelTitlePlacementType: [{
                type: Input
            }], levelTitlePlaceInside: [{
                type: Input
            }], levelTitleOrientation: [{
                type: Input
            }], levelTitleVerticalAlignment: [{
                type: Input
            }], levelTitleHorizontalAlignment: [{
                type: Input
            }], levelTitleFontSize: [{
                type: Input
            }], levelTitleFontFamily: [{
                type: Input
            }], levelTitleFontColor: [{
                type: Input
            }], levelTitleColor: [{
                type: Input
            }], levelTitleFontWeight: [{
                type: Input
            }], levelTitleFontStyle: [{
                type: Input
            }], levelTitleTemplate: [{
                type: Input
            }], levelBackgroundTemplate: [{
                type: Input
            }], distance: [{
                type: Input
            }], scale: [{
                type: Input
            }], minimumScale: [{
                type: Input
            }], maximumScale: [{
                type: Input
            }], showLabels: [{
                type: Input
            }], labelSize: [{
                type: Input
            }], labelOffset: [{
                type: Input
            }], labelOrientation: [{
                type: Input
            }], labelPlacement: [{
                type: Input
            }], labelFontSize: [{
                type: Input
            }], labelFontFamily: [{
                type: Input
            }], labelColor: [{
                type: Input
            }], labelFontWeight: [{
                type: Input
            }], labelFontStyle: [{
                type: Input
            }], enablePanning: [{
                type: Input
            }], autoSizeMinimum: [{
                type: Input
            }], autoSizeMaximum: [{
                type: Input
            }], showFrame: [{
                type: Input
            }], frameInnerPadding: [{
                type: Input
            }], frameOuterPadding: [{
                type: Input
            }], padding: [{
                type: Input
            }], onHighlightChanging: [{
                type: Output
            }], onHighlightChanged: [{
                type: Output
            }], onCursorChanging: [{
                type: Output
            }], onCursorChanged: [{
                type: Output
            }], onSelectionChanging: [{
                type: Output
            }], onSelectionChanged: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,