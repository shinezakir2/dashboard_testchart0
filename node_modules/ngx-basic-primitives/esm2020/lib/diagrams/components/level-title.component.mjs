import { Component, Input } from "@angular/core";
// @ts-ignore
import { HorizontalAlignmentType, TextOrientationType, VerticalAlignmentType } from "../../enums";
import { LevelAnnotationConfig } from "../../configs/level-annotation-config";
import * as i0 from "@angular/core";
import * as i1 from "../rotated-text.component";
import * as i2 from "@angular/common";
class LevelTitleOptions {
    constructor(config = {}) {
        this.levelTitleFontSize = "12px";
        this.levelTitleFontFamily = "Arial";
        this.levelTitleFontWeight = "normal";
        this.levelTitleFontStyle = "normal";
        this.levelTitleFontColor = "#ffffff";
        this.levelTitleOrientation = TextOrientationType.Auto;
        this.levelTitleHorizontalAlignment = HorizontalAlignmentType.Center;
        this.levelTitleVerticalAlignment = VerticalAlignmentType.Middle;
        this.levelTitleColor = "#4169e1";
        Object.assign(this, config);
    }
}
export class LevelTitleComponent {
    constructor() {
        this.options = new LevelTitleOptions();
        this.annotationConfig = new LevelAnnotationConfig();
        this.width = 0;
        this.height = 0;
        this.divStyle = null;
        this.label = "";
    }
    ngOnChanges(changes) {
        const backgroundColor = this.annotationConfig.titleColor || this.options.levelTitleColor;
        const color = this.annotationConfig.titleFontColor || this.options.levelTitleFontColor;
        this.divStyle = {
            backgroundColor,
            color,
            fontSize: this.options.levelTitleFontSize,
            fontFamily: this.options.levelTitleFontFamily,
            fontWeight: this.options.levelTitleFontWeight,
            fontStyle: this.options.levelTitleFontStyle
        };
        this.label = (this.annotationConfig.title || "").replace("\n", "<br/>");
    }
}
LevelTitleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.2", ngImport: i0, type: LevelTitleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
LevelTitleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.2", type: LevelTitleComponent, selector: "bp-level-title", inputs: { options: "options", annotationConfig: "annotationConfig", width: "width", height: "height" }, usesOnChanges: true, ngImport: i0, template: "<div class=\"level-title\" [ngStyle]=\"divStyle\">\r\n  <rotated-text\r\n    [width]=\"width\"\r\n    [height]=\"height\"\r\n    [orientation]=\"options.levelTitleOrientation\"\r\n    [horizontalAlignment]=\"options.levelTitleHorizontalAlignment\"\r\n    [verticalAlignment]=\"options.levelTitleVerticalAlignment\"\r\n  >{{label}}</rotated-text>\r\n</div>", styles: [".level-title{position:absolute;font-family:Trebuchet MS,Tahoma,Verdana,Arial,sans-serif;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-touch-callout:none;user-select:none;box-sizing:content-box;border-radius:4px;background:royalblue;border-width:0;color:#fff;padding:0;width:100%;height:100%;left:-1px;top:-1px}\n"], components: [{ type: i1.RotatedText, selector: "rotated-text", inputs: ["width", "height", "orientation", "horizontalAlignment", "verticalAlignment"] }], directives: [{ type: i2.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.2", ngImport: i0, type: LevelTitleComponent, decorators: [{
            type: Component,
            args: [{ selector: 'bp-level-title', template: "<div class=\"level-title\" [ngStyle]=\"divStyle\">\r\n  <rotated-text\r\n    [width]=\"width\"\r\n    [height]=\"height\"\r\n    [orientation]=\"options.levelTitleOrientation\"\r\n    [horizontalAlignment]=\"options.levelTitleHorizontalAlignment\"\r\n    [verticalAlignment]=\"options.levelTitleVerticalAlignment\"\r\n  >{{label}}</rotated-text>\r\n</div>", styles: [".level-title{position:absolute;font-family:Trebuchet MS,Tahoma,Verdana,Arial,sans-serif;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-touch-callout:none;user-select:none;box-sizing:content-box;border-radius:4px;background:royalblue;border-width:0;color:#fff;padding:0;width:100%;height:100%;left:-1px;top:-1px}\n"] }]
        }], propDecorators: { options: [{
                type: Input
            }], annotationConfig: [{
                type: Input
            }], width: [{
                type: Input
            }], height: [{
                type: Input
            }] } });
;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGV2ZWwtdGl0bGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWJhc2ljLXByaW1pdGl2ZXMvc3JjL2xpYi9kaWFncmFtcy9jb21wb25lbnRzL2xldmVsLXRpdGxlLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1iYXNpYy1wcmltaXRpdmVzL3NyYy9saWIvZGlhZ3JhbXMvY29tcG9uZW50cy9sZXZlbC10aXRsZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBNEIsTUFBTSxlQUFlLENBQUM7QUFDM0UsYUFBYTtBQUNiLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxtQkFBbUIsRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNsRyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQzs7OztBQUU5RSxNQUFNLGlCQUFpQjtJQVduQixZQUFZLFNBQXFDLEVBQUU7UUFWbkQsdUJBQWtCLEdBQVcsTUFBTSxDQUFDO1FBQ3BDLHlCQUFvQixHQUFXLE9BQU8sQ0FBQztRQUN2Qyx5QkFBb0IsR0FBVyxRQUFRLENBQUM7UUFDeEMsd0JBQW1CLEdBQVcsUUFBUSxDQUFDO1FBQ3ZDLHdCQUFtQixHQUFXLFNBQVMsQ0FBQztRQUN4QywwQkFBcUIsR0FBd0IsbUJBQW1CLENBQUMsSUFBSSxDQUFDO1FBQ3RFLGtDQUE2QixHQUE0Qix1QkFBdUIsQ0FBQyxNQUFNLENBQUM7UUFDeEYsZ0NBQTJCLEdBQTBCLHFCQUFxQixDQUFDLE1BQU0sQ0FBQztRQUNsRixvQkFBZSxHQUFXLFNBQVMsQ0FBQztRQUdoQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNoQyxDQUFDO0NBQ0o7QUFPRCxNQUFNLE9BQU8sbUJBQW1CO0lBTGhDO1FBT0ksWUFBTyxHQUFzQixJQUFJLGlCQUFpQixFQUFFLENBQUM7UUFHckQscUJBQWdCLEdBQTBCLElBQUkscUJBQXFCLEVBQUUsQ0FBQztRQUd0RSxVQUFLLEdBQVcsQ0FBQyxDQUFDO1FBR2xCLFdBQU0sR0FBVyxDQUFDLENBQUM7UUFtQm5CLGFBQVEsR0FBa0IsSUFBSSxDQUFDO1FBQy9CLFVBQUssR0FBVyxFQUFFLENBQUM7S0FDdEI7SUFuQkcsV0FBVyxDQUFDLE9BQXNCO1FBQzlCLE1BQU0sZUFBZSxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxVQUFVLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUM7UUFDekYsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLGNBQWMsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDO1FBRXZGLElBQUksQ0FBQyxRQUFRLEdBQUc7WUFDZCxlQUFlO1lBQ2YsS0FBSztZQUNMLFFBQVEsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLGtCQUFrQjtZQUN6QyxVQUFVLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxvQkFBb0I7WUFDN0MsVUFBVSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsb0JBQW9CO1lBQzdDLFNBQVMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLG1CQUFtQjtTQUM1QyxDQUFBO1FBRUQsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQztJQUM1RSxDQUFDOztnSEEzQlEsbUJBQW1CO29HQUFuQixtQkFBbUIsbUxDMUJoQyxxV0FRTTsyRkRrQk8sbUJBQW1CO2tCQUwvQixTQUFTOytCQUNJLGdCQUFnQjs4QkFNMUIsT0FBTztzQkFETixLQUFLO2dCQUlOLGdCQUFnQjtzQkFEZixLQUFLO2dCQUlOLEtBQUs7c0JBREosS0FBSztnQkFJTixNQUFNO3NCQURMLEtBQUs7O0FBc0JULENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG4vLyBAdHMtaWdub3JlXHJcbmltcG9ydCB7IEhvcml6b250YWxBbGlnbm1lbnRUeXBlLCBUZXh0T3JpZW50YXRpb25UeXBlLCBWZXJ0aWNhbEFsaWdubWVudFR5cGUgfSBmcm9tIFwiLi4vLi4vZW51bXNcIjtcclxuaW1wb3J0IHsgTGV2ZWxBbm5vdGF0aW9uQ29uZmlnIH0gZnJvbSBcIi4uLy4uL2NvbmZpZ3MvbGV2ZWwtYW5ub3RhdGlvbi1jb25maWdcIjtcclxuXHJcbmNsYXNzIExldmVsVGl0bGVPcHRpb25zIHtcclxuICAgIGxldmVsVGl0bGVGb250U2l6ZTogc3RyaW5nID0gXCIxMnB4XCI7XHJcbiAgICBsZXZlbFRpdGxlRm9udEZhbWlseTogc3RyaW5nID0gXCJBcmlhbFwiO1xyXG4gICAgbGV2ZWxUaXRsZUZvbnRXZWlnaHQ6IHN0cmluZyA9IFwibm9ybWFsXCI7XHJcbiAgICBsZXZlbFRpdGxlRm9udFN0eWxlOiBzdHJpbmcgPSBcIm5vcm1hbFwiO1xyXG4gICAgbGV2ZWxUaXRsZUZvbnRDb2xvcjogc3RyaW5nID0gXCIjZmZmZmZmXCI7XHJcbiAgICBsZXZlbFRpdGxlT3JpZW50YXRpb246IFRleHRPcmllbnRhdGlvblR5cGUgPSBUZXh0T3JpZW50YXRpb25UeXBlLkF1dG87XHJcbiAgICBsZXZlbFRpdGxlSG9yaXpvbnRhbEFsaWdubWVudDogSG9yaXpvbnRhbEFsaWdubWVudFR5cGUgPSBIb3Jpem9udGFsQWxpZ25tZW50VHlwZS5DZW50ZXI7XHJcbiAgICBsZXZlbFRpdGxlVmVydGljYWxBbGlnbm1lbnQ6IFZlcnRpY2FsQWxpZ25tZW50VHlwZSA9IFZlcnRpY2FsQWxpZ25tZW50VHlwZS5NaWRkbGU7XHJcbiAgICBsZXZlbFRpdGxlQ29sb3I6IHN0cmluZyA9IFwiIzQxNjllMVwiO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGNvbmZpZzogUGFydGlhbDxMZXZlbFRpdGxlT3B0aW9ucz4gPSB7fSkge1xyXG4gICAgICAgIE9iamVjdC5hc3NpZ24odGhpcywgY29uZmlnKTtcclxuICAgIH1cclxufVxyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ2JwLWxldmVsLXRpdGxlJyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi9sZXZlbC10aXRsZS5jb21wb25lbnQuaHRtbCcsXHJcbiAgICBzdHlsZVVybHM6IFsnLi9sZXZlbC10aXRsZS5jb21wb25lbnQuY3NzJ11cclxuICB9KVxyXG5leHBvcnQgY2xhc3MgTGV2ZWxUaXRsZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XHJcbiAgICBASW5wdXQoKVxyXG4gICAgb3B0aW9uczogTGV2ZWxUaXRsZU9wdGlvbnMgPSBuZXcgTGV2ZWxUaXRsZU9wdGlvbnMoKTtcclxuXHJcbiAgICBASW5wdXQoKVxyXG4gICAgYW5ub3RhdGlvbkNvbmZpZzogTGV2ZWxBbm5vdGF0aW9uQ29uZmlnID0gbmV3IExldmVsQW5ub3RhdGlvbkNvbmZpZygpO1xyXG5cclxuICAgIEBJbnB1dCgpXHJcbiAgICB3aWR0aDogbnVtYmVyID0gMDtcclxuXHJcbiAgICBASW5wdXQoKVxyXG4gICAgaGVpZ2h0OiBudW1iZXIgPSAwO1xyXG4gICAgICAgIFxyXG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xyXG4gICAgICAgIGNvbnN0IGJhY2tncm91bmRDb2xvciA9IHRoaXMuYW5ub3RhdGlvbkNvbmZpZy50aXRsZUNvbG9yIHx8IHRoaXMub3B0aW9ucy5sZXZlbFRpdGxlQ29sb3I7XHJcbiAgICAgICAgY29uc3QgY29sb3IgPSB0aGlzLmFubm90YXRpb25Db25maWcudGl0bGVGb250Q29sb3IgfHwgdGhpcy5vcHRpb25zLmxldmVsVGl0bGVGb250Q29sb3I7XHJcbiAgICBcclxuICAgICAgICB0aGlzLmRpdlN0eWxlID0ge1xyXG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yLFxyXG4gICAgICAgICAgY29sb3IsXHJcbiAgICAgICAgICBmb250U2l6ZTogdGhpcy5vcHRpb25zLmxldmVsVGl0bGVGb250U2l6ZSxcclxuICAgICAgICAgIGZvbnRGYW1pbHk6IHRoaXMub3B0aW9ucy5sZXZlbFRpdGxlRm9udEZhbWlseSxcclxuICAgICAgICAgIGZvbnRXZWlnaHQ6IHRoaXMub3B0aW9ucy5sZXZlbFRpdGxlRm9udFdlaWdodCxcclxuICAgICAgICAgIGZvbnRTdHlsZTogdGhpcy5vcHRpb25zLmxldmVsVGl0bGVGb250U3R5bGVcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMubGFiZWwgPSAodGhpcy5hbm5vdGF0aW9uQ29uZmlnLnRpdGxlIHx8IFwiXCIpLnJlcGxhY2UoXCJcXG5cIiwgXCI8YnIvPlwiKTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgZGl2U3R5bGU6IE9iamVjdCB8IG51bGwgPSBudWxsO1xyXG4gICAgbGFiZWw6IHN0cmluZyA9IFwiXCI7XHJcbn07XHJcbiIsIjxkaXYgY2xhc3M9XCJsZXZlbC10aXRsZVwiIFtuZ1N0eWxlXT1cImRpdlN0eWxlXCI+XHJcbiAgPHJvdGF0ZWQtdGV4dFxyXG4gICAgW3dpZHRoXT1cIndpZHRoXCJcclxuICAgIFtoZWlnaHRdPVwiaGVpZ2h0XCJcclxuICAgIFtvcmllbnRhdGlvbl09XCJvcHRpb25zLmxldmVsVGl0bGVPcmllbnRhdGlvblwiXHJcbiAgICBbaG9yaXpvbnRhbEFsaWdubWVudF09XCJvcHRpb25zLmxldmVsVGl0bGVIb3Jpem9udGFsQWxpZ25tZW50XCJcclxuICAgIFt2ZXJ0aWNhbEFsaWdubWVudF09XCJvcHRpb25zLmxldmVsVGl0bGVWZXJ0aWNhbEFsaWdubWVudFwiXHJcbiAgPnt7bGFiZWx9fTwvcm90YXRlZC10ZXh0PlxyXG48L2Rpdj4iXX0=