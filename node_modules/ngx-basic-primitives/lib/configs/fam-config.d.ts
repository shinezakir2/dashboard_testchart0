import { Visibility, OrientationType, VerticalAlignmentType, ElbowType, NeighboursSelectionMode, ShapeType, TextOrientationType, HorizontalAlignmentType, PlacementType, NavigationMode, PageFitMode, GroupByType, Enabled, LineType, AdviserPlacementType, SelectionPathMode } from '../enums';
import { BackgroundAnnotationConfig } from './background-annotation-config';
import { ConnectorAnnotationConfig } from './connector-annotation-config';
import { HighlightPathAnnotationConfig } from './highlight-path-annotation-config';
import { LevelAnnotationConfig } from './level-annotation-config';
import { ShapeAnnotationConfig } from './shape-annotation-config';
import { FamItemConfig } from './fam-item-config';
import { LabelAnnotationConfig } from './label-annotation-config';
import { TemplateConfig } from './template-config';
import { TemplateRef } from '@angular/core';
import { PaletteItemConfig } from './palette-item-config';
import { Size, Thickness } from '../structs';
export declare class FamConfig {
    navigationMode: NavigationMode;
    pageFitMode: PageFitMode;
    minimalVisibility: Visibility;
    minimumVisibleLevels: number;
    orientationType: OrientationType;
    verticalAlignment: VerticalAlignmentType;
    arrowsDirection: GroupByType;
    showExtraArrows: Boolean;
    extraArrowsMinimumSpace: number;
    groupByType: GroupByType;
    alignBylevels: Boolean;
    enableMatrixLayout: Boolean;
    minimumMatrixSize: number;
    maximumColumnsInMatrix: number;
    hideGrandParentsConnectors: Boolean;
    bevelSize: number;
    elbowType: ElbowType;
    elbowDotSize: number;
    emptyDiagramMessage: string;
    items: Array<FamItemConfig>;
    annotations: Array<BackgroundAnnotationConfig | ConnectorAnnotationConfig | HighlightPathAnnotationConfig | ShapeAnnotationConfig | LabelAnnotationConfig | LevelAnnotationConfig>;
    cursorItem: number | string | null;
    highlightItem: number | string | null;
    highlightGravityRadius: number;
    selectedItems: Array<number | string>;
    hasSelectorCheckbox: Enabled;
    selectCheckBoxLabel: string;
    selectionPathMode: SelectionPathMode;
    neighboursSelectionMode: NeighboursSelectionMode;
    templates: Array<TemplateConfig>;
    defaultTemplateName: string | null;
    defaultLabelAnnotationTemplate: string | null;
    hasButtons: Enabled;
    buttonsTemplate: TemplateRef<any> | null;
    normalLevelShift: number;
    dotLevelShift: number;
    lineLevelShift: number;
    normalItemsInterval: number;
    dotItemsInterval: number;
    lineItemsInterval: number;
    cousinsIntervalMultiplier: number;
    itemTitleFirstFontColor: string;
    itemTitleSecondFontColor: string;
    minimizedItemShapeType: ShapeType;
    linesColor: string;
    linesWidth: number;
    linesType: LineType;
    showNeigboursConnectorsHighlighted: Boolean;
    highlightLinesColor: string;
    highlightLinesWidth: number;
    highlightLinesType: LineType;
    linesPalette: Array<PaletteItemConfig>;
    calloutMaximumVisibility: Visibility;
    showCallout: Boolean;
    calloutPlacementOffset: number;
    defaultCalloutTemplateName: string | null;
    calloutfillColor: string;
    calloutBorderColor: string | null;
    calloutOffset: number;
    calloutCornerRadius: number;
    calloutPointerWidth: string;
    calloutLineWidth: number;
    calloutOpacity: number;
    buttonsPanelSize: number;
    groupTitlePanelSize: number;
    checkBoxPanelSize: number;
    groupTitlePlacementType: AdviserPlacementType;
    groupTitleOrientation: TextOrientationType;
    groupTitleVerticalAlignment: VerticalAlignmentType;
    groupTitleHorizontalAlignment: HorizontalAlignmentType;
    groupTitleFontSize: string;
    groupTitleFontFamily: string;
    groupTitleColor: string;
    groupTitleFontWeight: string;
    groupTitleFontStyle: string;
    groupTitleTemplate: TemplateRef<any> | null;
    levelTitlePanelSize: number;
    levelTitlePlacementType: AdviserPlacementType;
    levelTitlePlaceInside: Boolean;
    levelTitleOrientation: TextOrientationType;
    levelTitleVerticalAlignment: VerticalAlignmentType;
    levelTitleHorizontalAlignment: HorizontalAlignmentType;
    levelTitleFontSize: string;
    levelTitleFontFamily: string;
    levelTitleFontColor: string;
    levelTitleColor: string;
    levelTitleFontWeight: string;
    levelTitleFontStyle: string;
    levelTitleTemplate: TemplateRef<any> | null;
    levelBackgroundTemplate: TemplateRef<any> | null;
    distance: number;
    scale: number;
    minimumScale: number;
    maximumScale: number;
    showLabels: Enabled;
    labelSize: Size;
    labelOffset: number;
    labelOrientation: TextOrientationType;
    labelPlacement: PlacementType;
    labelFontSize: string;
    labelFontFamily: string;
    labelColor: string;
    labelFontWeight: string;
    labelFontStyle: string;
    enablePanning: Boolean;
    autoSizeMinimum: Size;
    autoSizeMaximum: Size;
    showFrame: Boolean;
    frameInnerPadding: Thickness;
    frameOuterPadding: Thickness;
    padding: Thickness;
    constructor(config?: Partial<FamConfig>);
}
