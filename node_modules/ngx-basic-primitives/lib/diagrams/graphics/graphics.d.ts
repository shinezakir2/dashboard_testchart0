import { Size } from '../../structs';
import { HorizontalAlignmentType, TextOrientationType, VerticalAlignmentType } from '../../enums';
import { Placeholder } from './placeholder';
import { TemplateRef } from '@angular/core';
export declare class Graphics {
    placeholders: {
        [id: string]: Placeholder;
    };
    activePlaceholder: Placeholder | null;
    hasGraphics: boolean;
    names: Array<string>;
    size: Size;
    constructor(size: Size);
    clean(): void;
    resize(name: string, width: number, height: number): void;
    position(name: string, left: number, top: number, width: number, height: number): void;
    show(name: string): void;
    hide(name: string): void;
    resizePlaceholder(placeholder: Placeholder, left: number, top: number, width: number, height: number): void;
    reset(placeholderName: string, layerKey: number): void;
    activate(placeholderName: string, layerKey: number): Placeholder | null;
    activatePlaceholder(name: string): void;
    activateLayer(layerKey: number): void;
    getPlaceholders(): {
        [id: string]: Placeholder;
    };
    text(x: number, y: number, width: number, height: number, label: string, orientation: TextOrientationType, horizontalAlignment: HorizontalAlignmentType, verticalAlignment: VerticalAlignmentType, attr: Object): void;
    polyline(polylineData: any): void;
    polylinesBuffer(buffer: any): void;
    template(x: number, y: number, width: number, height: number, contentX: number, contentY: number, contentWidth: number, contentHeight: number, options: any, _hashCode: string, onRenderTemplate: (data: any) => TemplateRef<any> | null, uiHash: Object, attr: Object): void;
    getPxSize(value: any, base: number): any;
}
